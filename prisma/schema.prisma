// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @unique @default(autoincrement())
  name         String
  email        String    @unique
  password     String
  phone        Int       @unique
  address      String
  gender       String
  profileImage String?
  createdAt    DateTime? @default(now())
  updateAt     DateTime? @default(now())
}

model userAdmin {
  id        Int       @id @unique @default(autoincrement())
  name      String
  createdAt DateTime? @default(now())
  updateAt  DateTime? @default(now())
}

model Product {
  id        Int       @id @unique @default(autoincrement())
  name      String    @unique
  desc      String
  price     Int
  stock     Int
  imageUrl  String
  createdAt DateTime? @default(now())
  updateAt  DateTime? @default(now())

  // Relation
  categoryId  Int
  Category    Category  @relation(fields: [categoryId], references: [id])
  itemOrderId Int
  itemOrder   itemOrder @relation(fields: [itemOrderId], references: [id])
}

model Category {
  id        Int       @id @unique @default(autoincrement())
  name      String    @unique
  createdAt DateTime? @default(now())
  updateAt  DateTime? @default(now())

  // Relation
  product Product[] // 1 Category bisa punya banyak Produk
}

model Order {
  id          Int       @id @default(autoincrement())
  statusOrder String
  dateOrder   DateTime
  totalOrder  Int
  createdAt   DateTime? @default(now())
  updateAt    DateTime? @default(now())

  // Relation
  itemOrderId Int
  itemOrder   itemOrder @relation(fields: [itemOrderId], references: [id])
}

model itemOrder {
  id Int @id @unique @default(autoincrement())

  // Relation
  product Product[] // 1 itemOrder bisa punya banyak Produk
  order   Order[]
}
